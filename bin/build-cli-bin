#!/usr/bin/env sh

set -eu

bindir=$( cd "${0%/*}" && pwd )
rootdir=$( cd "$bindir"/.. && pwd )
# shellcheck source=_tag.sh
. "$bindir"/_tag.sh
# shellcheck source=_os.sh
. "$bindir"/_os.sh

# build the multi-arch CLI binaries
export CLI_MULTIARCH=${CLI_MULTIARCH:-}

(
    target="$rootdir"/target/cli
    mkdir -p "$target"
     # TODO: `go generate` does not honor -mod=readonly
    go generate -mod=readonly ./pkg/static
    root_tag=$("$bindir"/root-tag)
    GO_LDFLAGS="-s -w -X github.com/linkerd/linkerd-smi/pkg/version.Version=$root_tag"
    if [ -n "$CLI_MULTIARCH" ]; then
        CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -o "$target"/linkerd-smi-linux-amd64 -tags production -mod=readonly -ldflags "${GO_LDFLAGS}" ./cli
        CGO_ENABLED=0 GOOS=linux GOARCH=arm64 go build -o "$target"/linkerd-smi-linux-arm64 -tags production -mod=readonly -ldflags "${GO_LDFLAGS}" ./cli
        CGO_ENABLED=0 GOOS=linux GOARCH=arm go build -o "$target"/linkerd-smi-linux-arm -tags production -mod=readonly -ldflags "${GO_LDFLAGS}" ./cli
        CGO_ENABLED=0 GOOS=darwin go build -o "$target"/linkerd-smi-darwin -tags production -mod=readonly -ldflags "${GO_LDFLAGS}" ./cli
        CGO_ENABLED=0 GOOS=darwin GOARCH=arm64 go build -o "$target"/linkerd-smi-darwin-arm64 -tags production -mod=readonly -ldflags "${GO_LDFLAGS}" ./cli
        CGO_ENABLED=0 GOOS=windows go build -o "$target"/linkerd-smi-windows -tags production -mod=readonly -ldflags "${GO_LDFLAGS}" ./cli
    else
        CGO_ENABLED=0 GOOS=$(os) GOARCH=$(arch) go build -o "$target/linkerd-smi-$(os)-$(arch)" -tags production -mod=readonly -ldflags "${GO_LDFLAGS}" ./cli
        echo "$target/linkerd-smi-$(os)-$(arch)"
    fi
)
